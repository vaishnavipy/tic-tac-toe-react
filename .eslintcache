[{"/Users/vaishnaviravichandran/Desktop/React/tic-tac-toe/src/App.js":"1","/Users/vaishnaviravichandran/Desktop/React/tic-tac-toe/src/index.js":"2","/Users/vaishnaviravichandran/Desktop/React/tic-tac-toe/src/game.js":"3","/Users/vaishnaviravichandran/Desktop/React/tic-tac-toe/src/grid.js":"4","/Users/vaishnaviravichandran/Desktop/React/tic-tac-toe/src/gameContextProvider.js":"5","/Users/vaishnaviravichandran/Desktop/React/tic-tac-toe/src/CheckWinner.js":"6"},{"size":637,"mtime":1606324652981,"results":"7","hashOfConfig":"8"},{"size":514,"mtime":1606313291500,"results":"9","hashOfConfig":"8"},{"size":451,"mtime":1606324427045,"results":"10","hashOfConfig":"8"},{"size":1461,"mtime":1606324585015,"results":"11","hashOfConfig":"8"},{"size":1238,"mtime":1606323703853,"results":"12","hashOfConfig":"8"},{"size":706,"mtime":1606323983173,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wkes6k",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vaishnaviravichandran/Desktop/React/tic-tac-toe/src/App.js",["27"],"/Users/vaishnaviravichandran/Desktop/React/tic-tac-toe/src/index.js",["28"],"/Users/vaishnaviravichandran/Desktop/React/tic-tac-toe/src/game.js",["29"],"/Users/vaishnaviravichandran/Desktop/React/tic-tac-toe/src/grid.js",["30","31","32","33","34","35","36"],"import React, { useContext, useEffect, useState } from \"react\";\nimport Game from \"./game\";\nimport {GameContext} from \"./gameContextProvider\";\nimport  CheckWinner from \"./CheckWinner\"\n\nfunction Grid(props){\n    let allGrids;\n   \n    const {nextPlayer,changePlayer,setGridFullFunc,gridFull, handleWinner,winner,resetGame } = useContext(GameContext)\n\n    let emptyGrids=[]; let winnerPlayer;\n\n   \n  \n\n    function handleClick(event){\n\n        if(!gridFull && event.target.innerHTML == \"\" && winner == \"\"){\n            event.target.style.color=\"black\";\n            event.target.innerHTML = nextPlayer;\n            \n            changePlayer();\n            }\n     \n        allGrids = document.querySelectorAll(\".grid\");\n\n        winnerPlayer = CheckWinner(allGrids);\n        \n        if(winnerPlayer){\n        handleWinner(winnerPlayer)}\n       \n\n        allGrids.forEach(grid => {\n            if(grid.innerHTML == \"\" ){\n                emptyGrids.push(grid)\n            }\n\n        })\n       \n        if(emptyGrids.length == 0){\n            setGridFullFunc()\n        }\n        emptyGrids=[];\n\n       \n\n    }\n\n    useEffect(()=>{\nconsole.log(\"useeffect\")\n        if(resetGame){\n            allGrids = document.querySelectorAll(\".grid\");\n            allGrids.forEach(grid => grid.innerHTML = \"\")\n    \n        }\n        \n    },[resetGame])\n\n\n    return(\n    <div className={`grid ${props.class}`}  onClick={handleClick} >\n        \n    </div>)\n}\n\n\n\n\n\nexport default Grid;","/Users/vaishnaviravichandran/Desktop/React/tic-tac-toe/src/gameContextProvider.js",["37"],"/Users/vaishnaviravichandran/Desktop/React/tic-tac-toe/src/CheckWinner.js",["38","39","40","41","42"],{"ruleId":"43","severity":1,"message":"44","line":2,"column":22,"nodeType":"45","messageId":"46","endLine":2,"endColumn":30},{"ruleId":"43","severity":1,"message":"47","line":5,"column":9,"nodeType":"45","messageId":"46","endLine":5,"endColumn":20},{"ruleId":"43","severity":1,"message":"48","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":13},{"ruleId":"43","severity":1,"message":"44","line":1,"column":40,"nodeType":"45","messageId":"46","endLine":1,"endColumn":48},{"ruleId":"43","severity":1,"message":"49","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":12},{"ruleId":"50","severity":1,"message":"51","line":18,"column":48,"nodeType":"52","messageId":"53","endLine":18,"endColumn":50},{"ruleId":"50","severity":1,"message":"51","line":18,"column":64,"nodeType":"52","messageId":"53","endLine":18,"endColumn":66},{"ruleId":"50","severity":1,"message":"51","line":34,"column":31,"nodeType":"52","messageId":"53","endLine":34,"endColumn":33},{"ruleId":"50","severity":1,"message":"51","line":40,"column":30,"nodeType":"52","messageId":"53","endLine":40,"endColumn":32},{"ruleId":"54","severity":1,"message":"55","line":52,"column":24,"nodeType":"56","endLine":52,"endColumn":58},{"ruleId":"50","severity":1,"message":"51","line":22,"column":27,"nodeType":"52","messageId":"53","endLine":22,"endColumn":29},{"ruleId":"50","severity":1,"message":"51","line":11,"column":45,"nodeType":"52","messageId":"53","endLine":11,"endColumn":47},{"ruleId":"50","severity":1,"message":"51","line":11,"column":115,"nodeType":"52","messageId":"53","endLine":11,"endColumn":117},{"ruleId":"50","severity":1,"message":"57","line":11,"column":185,"nodeType":"52","messageId":"53","endLine":11,"endColumn":187},{"ruleId":"50","severity":1,"message":"57","line":11,"column":226,"nodeType":"52","messageId":"53","endLine":11,"endColumn":228},{"ruleId":"50","severity":1,"message":"57","line":11,"column":267,"nodeType":"52","messageId":"53","endLine":11,"endColumn":269},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'GameContext' is defined but never used.","'react' is defined but never used.","'Game' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Assignments to the 'allGrids' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Expected '!==' and instead saw '!='."]